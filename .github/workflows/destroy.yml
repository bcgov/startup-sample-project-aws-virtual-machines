# This workflow will destroy the terraform scripts which deployed the recquied infrastructure and the startup-sample-app

name: Terraform destroy

on:
  workflow_dispatch:
    inputs:
      env:
        description: select the environment to destroy
        type: environment
        required: true

env:
  TF_VERSION: 1.5.7
  environment: ${{ inputs.env }}
  SHA: ${{ github.sha }}
  GIT_URL: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      - name: checkout the repo and building the Backend
        uses: actions/checkout@v3

      - name: print cloud_environment
        run: echo the cloud env is ${{ env.environment }}

      - name: setting variables
        run: |
          cd src/terraform/
          cat <<EOF > dev.auto.tfvars
          sha = "${{ env.SHA }}"
          git_url= "${{ env.GIT_URL }}"
          target_env = "${{ env.environment }}"
          EOF

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: Destroying startup-sample-project using terraform
        run: |
          cd src/terraform/
          cat <<EOF > backend.hcl
          bucket = "${{ vars.S3_BACKEND_NAME }}"
          key = "virtual-machine-app.tfstate"
          dynamodb_table = "terraform-remote-state-lock-${{ vars.LICENCEPLATE }}"
          EOF

          terraform init -backend-config=backend.hcl -input=false
          terraform destroy -auto-approve -input=false
